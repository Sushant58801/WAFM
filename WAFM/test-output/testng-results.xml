<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="143996" started-at="2019-03-27T11:05:11Z" finished-at="2019-03-27T11:07:35Z">
    <groups>
    </groups>
    <test name="LoginTest" duration-ms="42966" started-at="2019-03-27T11:05:11Z" finished-at="2019-03-27T11:05:54Z">
      <class name="WAFMTest.LoginTest">
        <test-method status="PASS" signature="Launchtest()[pri:0, instance:WAFMTest.LoginTest@d816dde]" name="Launchtest" duration-ms="1663" started-at="2019-03-27T16:35:11Z" data-provider="init" finished-at="2019-03-27T16:35:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Launchtest -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:WAFMTest.LoginTest@d816dde]" name="takeScreenShotOnFailure" is-config="true" duration-ms="4" started-at="2019-03-27T16:35:13Z" finished-at="2019-03-27T16:35:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Launchtest status=SUCCESS method=LoginTest.Launchtest()[pri:0, instance:WAFMTest.LoginTest@d816dde] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void WAFMTest.LoginTest.Launchtest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="LoginValidation()[pri:0, instance:WAFMTest.LoginTest@d816dde]" name="LoginValidation" duration-ms="13343" started-at="2019-03-27T16:35:13Z" data-provider="init" finished-at="2019-03-27T16:35:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginValidation -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:WAFMTest.LoginTest@d816dde]" name="takeScreenShotOnFailure" is-config="true" duration-ms="1" started-at="2019-03-27T16:35:26Z" finished-at="2019-03-27T16:35:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginValidation status=SUCCESS method=LoginTest.LoginValidation()[pri:0, instance:WAFMTest.LoginTest@d816dde] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void WAFMTest.LoginTest.LoginValidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="homePageContents()[pri:0, instance:WAFMTest.LoginTest@d816dde]" name="homePageContents" duration-ms="27795" started-at="2019-03-27T16:35:26Z" data-provider="init" finished-at="2019-03-27T16:35:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageContents -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:WAFMTest.LoginTest@d816dde]" name="takeScreenShotOnFailure" is-config="true" duration-ms="1" started-at="2019-03-27T16:35:54Z" finished-at="2019-03-27T16:35:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageContents status=SUCCESS method=LoginTest.homePageContents()[pri:0, instance:WAFMTest.LoginTest@d816dde] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void WAFMTest.LoginTest.homePageContents() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- WAFMTest.LoginTest -->
    </test> <!-- LoginTest -->
    <test name="InvoiceTest" duration-ms="100369" started-at="2019-03-27T11:05:54Z" finished-at="2019-03-27T11:07:35Z">
      <class name="WAFMTest.InvoiceListTest">
        <test-method status="PASS" signature="getReporter()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="getReporter" is-config="true" duration-ms="1704" started-at="2019-03-27T16:35:09Z" finished-at="2019-03-27T16:35:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReporter -->
        <test-method status="FAIL" signature="PDFDownload()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="PDFDownload" duration-ms="83314" started-at="2019-03-27T16:35:54Z" data-provider="init" finished-at="2019-03-27T16:37:18Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.sg.Page.InvoiceListPage.PDFDownload(InvoiceListPage.java:242)
	at WAFMTest.InvoiceListTest.PDFDownload(InvoiceListTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PDFDownload -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="takeScreenShotOnFailure" is-config="true" duration-ms="2174" started-at="2019-03-27T16:37:18Z" finished-at="2019-03-27T16:37:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PDFDownload status=FAILURE method=InvoiceListTest.PDFDownload()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void WAFMTest.InvoiceListTest.PDFDownload() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="FAIL" signature="AddApprover()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="AddApprover" duration-ms="12523" started-at="2019-03-27T16:37:20Z" data-provider="init" finished-at="2019-03-27T16:37:32Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.sg.Page.InvoiceListPage.AddApprover(InvoiceListPage.java:253)
	at WAFMTest.InvoiceListTest.AddApprover(InvoiceListTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddApprover -->
        <test-method status="PASS" signature="takeScreenShotOnFailure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="takeScreenShotOnFailure" is-config="true" duration-ms="2261" started-at="2019-03-27T16:37:32Z" finished-at="2019-03-27T16:37:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddApprover status=FAILURE method=InvoiceListTest.AddApprover()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void WAFMTest.InvoiceListTest.AddApprover() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method status="PASS" signature="closeextend()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="closeextend" is-config="true" duration-ms="2107" started-at="2019-03-27T16:37:35Z" finished-at="2019-03-27T16:37:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeextend -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:WAFMTest.InvoiceListTest@5851bd4f]" name="tearDown" is-config="true" duration-ms="2293" started-at="2019-03-27T16:37:37Z" finished-at="2019-03-27T16:37:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- WAFMTest.InvoiceListTest -->
    </test> <!-- InvoiceTest -->
  </suite> <!-- Suite -->
</testng-results>
